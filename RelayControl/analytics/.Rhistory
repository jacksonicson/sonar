abline(fit, col='red')
hist(residuals(fit))
fit = lm(data$duration ~ domainload)
abline(fit, col='red')
plot(domainload, overhead)
plot(domainload, data$duration)
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
hist(residuals(fit))
summary(fit)
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.during
overhead = overhead[data$source.during < 80]
domainload = domainload[data$source.during < 80]
length(domainload)
domainload2 = data$domain.cpu.before
plot(domainload2, domainload)
domainload = domainload[data$source.during < 80]
overhead = overhead[data$source.during < 80]
domainload = domainload[data$source.during < 80]
domainload2 = data$domain.cpu.before
plot(domainload, overhead)
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
summary(fit)
overhead = overhead[data$source.during < 90]
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.during
overhead = overhead[data$source.during < 90]
domainload = domainload[data$source.during < 90]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.during
overhead = overhead[data$source.during < 85]
domainload = domainload[data$source.during < 85]
plot(domainload, overhead)
overhead = overhead[data$source.during < 85]
domainload = domainload[data$source.during < 85]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
hist(residuals(fit))
summary(fit)
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.during
overhead = overhead[data$source.during < 85]
domainload = domainload[data$source.during < 85]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.during
overhead = overhead[data$source.during < 85]
domainload = domainload[data$source.during < 85]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
summary(fit)
print(fit)
overhead = data$target.during - data$target.before
domainload = data$domain.cpu.during
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
summary(fit)
hist(residuals(fit))
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
overhead = data$source.during - data$source.before
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
domainload2 = data$domain.cpu.before
print(fit)
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
overhead = overhead[data$domain.cpu.before < 80]
domainload = domainload[data$domain.cpu.before < 80]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
overhead = overhead[data$domain.cpu.before < 80 && data$domain.cpu.before > 30]
domainload = domainload[data$domain.cpu.before < 80 && data$domain.cpu.before > 30]
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
overhead = overhead[data$domain.cpu.before < 80 && data$domain.cpu.before > 30]
domainload = domainload[data$domain.cpu.before < 80 && data$domain.cpu.before > 30]
plot(domainload, overhead)
overhead = overhead[data$domain.cpu.before < 80 and data$domain.cpu.before > 30]
overhead = overhead[data$domain.cpu.before < 80 & data$domain.cpu.before > 30]
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
overhead = overhead[data$domain.cpu.before < 80 & data$domain.cpu.before > 30]
domainload = domainload[data$domain.cpu.before < 80 & data$domain.cpu.before > 30]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
data = read.csv('C:/temp/migration-data.csv', sep='\t')
# Descriptive statistics on migration errors
mean(data$errors)
errors.none = length(data$errors[data$errors == 0])
errors.count = length(data$errors)
errors.per = errors.none / errors.count
cat(round(errors.per * 100, digits=0),'% migrations without errors', sep='')
errors.quantiles = quantile(data$errors, c(.95))
cat('Quantile 95th on number of errors (95% of live migrations <= value): ', errors.quantiles, sep='')
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
hist(residuals(fit))
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
hist(residuals(fit))
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
overhead = overhead[data$domain.cpu.before < 90]
domainload = domainload[data$domain.cpu.before < 90]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
data = read.csv('C:/temp/migration-data.csv', sep='\t')
# Descriptive statistics on migration errors
mean(data$errors)
errors.none = length(data$errors[data$errors == 0])
errors.count = length(data$errors)
errors.per = errors.none / errors.count
cat(round(errors.per * 100, digits=0),'% migrations without errors', sep='')
errors.quantiles = quantile(data$errors, c(.95))
cat('Quantile 95th on number of errors (95% of live migrations <= value): ', errors.quantiles, sep='')
#####################################
# Network Overhead ##################
#####################################
source.diff = (data$source.net.during - data$source.net.before) / 1024 # Convert to MByte/second
hist(source.diff, main='Network Source Server', xlab='Traffic increase before - during migration')
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("Network - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.net.during - data$target.net.before) / 1024
hist(target.diff, main='Network Target Server', xlab='Traffic increase before - during migration')
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("Network - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
#####################################
# CPU Overhad #######################
#####################################
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration')
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before) / data$duration
domainload = data$domain.cpu.before
overhead = overhead[data$domain.cpu.before < 90]
domainload = domainload[data$domain.cpu.before < 90]
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
overhead = (data$target.during - data$target.before)
domainload = data$domain.cpu.before
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$target.during - data$target.before)
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
domainload2 = data$domain.cpu.before
print(fit)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before)
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
domainload2 = data$domain.cpu.before
print(fit)
hist(residuals(fit))
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before)
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
hist(residuals(fit))
summary(fit)
domainload2 = data$domain.cpu.before
print(fit)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before)
domainload = data$domain.cpu.before
plot(domainload, overhead)
fit = lm(overhead ~ domainload)
abline(fit, col='red')
#hist(residuals(fit))
summary(fit)
domainload2 = data$domain.cpu.before
print(fit)
plot(data$source.before, overhead)
plot(domainload, overhead)
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration')
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
data = read.csv('C:/temp/regression.csv', sep='\t')
print(data)
data = read.csv('C:/temp/regression.csv', sep='\t')
names(data)
hist(data$RTim)
hist(data$Migrations)
hist(data$Servers)
plot(data$Controller, data$Migrations)
glm(data$RTim ~ data$Migrations + data$Servers)
ff = factor(data$Controller)
summary(lm(data$RTime ~ data$Servers + data$Violations))
summary(lm(data$Servers ~ data$Mix + data$Controller))
data = read.csv('C:/temp/migration-times.csv', sep='\t')
# Descriptive statistics
times.elements = length(data$duration)
times.duration = mean(data$duration)
times.quantiles = quantile(data$duration)
# Fit and plot log-normal distribution
y = data$duration
params = fitdistr(y, densfun="log-normal")
x = seq(0,100)
hist(y, main=NULL, xlab="Migration duration", ylab="Probability", prob=TRUE)
hx = dlnorm(x=x, meanlog=3.3, sdlog=0.27)
lines(x, hx, col='red', lwd=3)
cat('length:', times.elements, ' mean duration:', times.duration, ' quantiles:', times.quantiles)
print('Log normal distribution params:')
print(params)
e.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CP
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
summary(lm(data$Server ~ data$Mix + data$Controller))
data = read.csv('C:/temp/regression.csv', sep='\t')
# Various linear models
summary(lm(data$Server ~ data$Mix + data$Controller))
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers))
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers+ data$MaxRTime + data$Migrations))
summary(lm(data$MaxRTime ~ data$Migrations + data$Mix + data$Servers))
summary(lm(data$RTime ~ data$Servers + data$Violations))
summary(lm(data$RTime ~ data$Servers + data$Violations))
summary(lm(data$RTime ~ data$Servers + data$Violations))
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers))
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers+ data$MaxRTime + data$Migrations))
summary(lm(data$MaxRTime ~ data$Migrations + data$Mix + data$Servers))
summary(lm(data$MaxRTime ~ data$Migrations + data$Mix + data$Servers))
summary(lm(data$RTime ~ data$Servers + data$Violations))
summary(lm(data$Violations ~ data$Servers + data$RTime + data$Controller))
summary(lm(data$Servers ~ data$Mix + data$Controller))
summary(lm(data$Servers ~ data$Mix + data$Controller))
cor(data$Mix, data$Controller)
rcorr(data$Mix, data$Controller)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
overhead = (data$source.during - data$source.before)
domainload = data$domain.cpu.before
plot(domainload, overhead)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
source.diff = (data$source.net.during - data$source.net.before) / 1024 # Convert to MByte/second
hist(source.diff, main='Network Source Server', xlab='Traffic increase before - during migration')
source.mean = mean(source.diff)
source.median = median(source.diff)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
source.dist = fitdistr(source.diff, densfun="normal")
print(source.dist)
hx = norm(x=x, meanlog=5.2, sdlog=12.1)
hx = norm(x=x, mean=5.2, sd=12.1)
hx = norm(x=x, sd=5.2)
hx = dnorm(x=x, sd=12, mean=5.2)
lines(x, hx, col='red', lwd=3)
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration', prob=TRUE)
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
source.dist = fitdistr(source.diff, densfun="normal")
print(source.dist)
x = seq(0,100)
hx = dnorm(x=x, sd=12, mean=5.2)
lines(x, hx, col='red', lwd=3)
x = seq(-100,100)
hx = dnorm(x=x, sd=12, mean=5.2)
lines(x, hx, col='red', lwd=3)
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration')
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration', prob=TRUE)
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=12, mean=5.2)
lines(x, hx, col='red', lwd=3)
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=18.8, mean=15.7)
lines(x, hx, col='red', lwd=3)
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration', prob=TRUE)
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=18.8, mean=15.7)
lines(x, hx, col='red', lwd=3)
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=18.8, mean=15.7)
lines(x, hx, col='red', lwd=1, )
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration', prob=TRUE)
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=18.8, mean=15.7)
lines(x, hx, col='red', lwd=1, )
lines(x, hx, col='red', lwd=2, )
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers))
summary(lm(data$RTime ~ data$Controller + data$Mix + data$Servers+ data$MaxRTime + data$Migrations))
summary(lm(data$MaxRTime ~ data$Migrations + data$Mix + data$Servers))
# INFO
# The data for this script is generated by analytics.py
library('MASS')
########################################
## Duration ############################
########################################
data = read.csv('C:/temp/migration-times.csv', sep='\t')
# Descriptive statistics
times.elements = length(data$duration)
times.duration = mean(data$duration)
times.quantiles = quantile(data$duration)
# Fit and plot log-normal distribution
y = data$duration
params = fitdistr(y, densfun="log-normal")
x = seq(0,100)
hist(y, main=NULL, xlab="Migration duration", ylab="Probability", prob=TRUE)
hx = dlnorm(x=x, meanlog=3.3, sdlog=0.27)
lines(x, hx, col='red', lwd=3)
cat('length:', times.elements, ' mean duration:', times.duration, ' quantiles:', times.quantiles)
print('Log normal distribution params:')
print(params)
data = read.csv('C:/temp/migration-data.csv', sep='\t')
# Descriptive statistics on migration errors
mean(data$errors)
errors.none = length(data$errors[data$errors == 0])
errors.count = length(data$errors)
errors.per = errors.none / errors.count
cat(round(errors.per * 100, digits=0),'% migrations without errors', sep='')
errors.quantiles = quantile(data$errors, c(.95))
cat('Quantile 95th on number of errors (95% of live migrations <= value): ', errors.quantiles, sep='')
source.diff = (data$source.net.during - data$source.net.before) / 1024 # Convert to MByte/second
hist(source.diff, main='Network Source Server', xlab='Traffic increase before - during migration')
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("Network - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.net.during - data$target.net.before) / 1024
hist(target.diff, main='Network Target Server', xlab='Traffic increase before - during migration')
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("Network - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
#####################################
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Load increase before - during migration', prob=TRUE)
target.diff = target.diff[is.finite(target.diff)]
target.mean = mean(target.diff)
target.median = median(target.diff)
cat("CPU - target server: ", "mean = ", round(target.mean, digits=2), " median = ", round(target.median, digits=2), sep='')
source.dist = fitdistr(target.diff, densfun="normal")
print(source.dist)
x = seq(-100,100)
hx = dnorm(x=x, sd=18.8, mean=15.7)
lines(x, hx, col='red', lwd=2, )
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
source.diff = source.diff[is.finite(source.diff)] # Filter NaN
source.mean = mean(source.diff)
source.median = median(source.diff)
cat("CPU - source server: ", "mean = ", round(source.mean, digits=2), " median = ", round(source.median, digits=2), sep='')
target.diff = (data$target.during - data$target.before)
hist(target.diff, main='CPU Target Server', xlab='Loa
data = read.csv('C:/temp/migration-data.csv', sep='\t')
source.diff = data$source.during - data$source.before
hist(source.diff, main='CPU Source Server', xlab='Load increase before - during migration')
hist(source.diff, main=NULL, xlab='Load increase before - during migration')
target.diff = (data$target.during - data$target.before)
target.diff = (data$target.during - data$target.before)
# CPU Target Server
hist(target.diff, main=NULL, xlab='Load increase before - during migration', prob=TRUE)
source.diff = data$source.during - data$source.before
# CPU Source Server
hist(source.diff, main=NULL, xlab='Load increase before - during migration')
hist(source.diff, main=NULL, xlab='Load increase before - during migration', ylab='Frequency')
hist(target.diff, main=NULL, xlab='Load increase before - during migration', , ylab='Frequency')
hist(source.diff, main=NULL, xlab='Load increase before - during migration', ylab='Frequency')
